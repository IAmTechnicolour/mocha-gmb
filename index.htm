<html>
	<head>

		<script type="application/javascript" src="gmb_mnemonic.js"></script>
		<script type="application/javascript" src="gmb_memory.js"></script>
		<script type="application/javascript" src="gmb_cpu.js"></script>
		<script type="application/javascript" src="gmb_opcode_functions.js"></script>
		<script type="application/javascript" src="gmb_opcodes.js"></script>
		<script type="application/javascript" src="gmb_cb_opcodes.js"></script>
		<script type="application/javascript" src="gmb_interupts.js"></script>
		<script type="application/javascript" src="gmb_gpu.js"></script>
		<script type="application/javascript" src="gmb_lcd.js"></script>
		<script type="application/javascript" src="gmb_timers.js"></script>
		<script type="application/javascript" src="gmb_joypad.js"></script>

		<style>
			table
			{
				border-collapse:collapse;
				font-family: "Courier New", monospace;
			}
			table,th, td
			{
				border: 1px solid black;
			}

			td
			{
				width: 100px;
				text-align: center;
			}

		</style>




	</head>
	<body>

		<canvas id="canvas1" width="160" height="144"></canvas>

		<br><br>
		<div id = "fps"> FPS: </div><br>
		<input type="file" id="file" name="file"/><br>
		<output id="list"></output><br>

		<button type="button" onclick="run = setInterval(executionLoop,1);">Run</button>
		<button type="button" onclick="clearInterval(run)">Stop</button>

		<script type="text/javascript">




			var canvas = document.getElementById("canvas1");
			var ctx = canvas.getContext('2d');
			var canvasData = ctx.createImageData(canvas.width, canvas.height);
			var buf = new ArrayBuffer(canvasData.data.length);
			var buf8 = new Uint8ClampedArray(buf);
			var PixelData = new Uint32Array(buf);


			window.onerror=function(msg, url, linenumber){
				var Opcode = Read(PC);
				alert('Error message: '+msg+'\nURL: '+url+'\nLine Number: '+linenumber+'\nOp: '+Opcode+'\nPC: '+PC);
				return true
			}




		</script>




		<script type = "application/javascript">

			var reader = new FileReader();

			reader.onload = function(evt) {
				var ROMStr = reader.result;
				//var ROMStr = ROMStr.replace(/[^a-zA-Z0-9]/g, "")
				//alert(ROMStr);

				ROM = [];


				for (var i = 0; i < ROMStr.length; i++) {
				    ROM[i] = ROMStr.charCodeAt(i);
				}	

				alert('ROM size: ' + ROM.length +
				' bytes\nROM type: ' + tmbc_type[ROM[0x0147]] + 
				"\nROM banks: " + tmbc_rom_size[ROM[0x0148]] + 
				"\nRAM banks: " + tmbc_ram_size[ROM[0x0149]]);


				MBC = tmbc_rom_id[ROM[0x0147]];
				NumberRomBanks = tmbc_rom_banks[ROM[0x0148]];
				NumberRamBanks = 3;
				
			}

			function handleFileSelect(evt) {
				var file = evt.target.files[0];
				document.getElementById('list').innerHTML = 
				'<strong>' + escape(file.name) + '</strong> (' + (file.type || 'n/a') + ') - ' + file.size + ' bytes';

				reader.readAsBinaryString(file)

			}

			document.getElementById('file').addEventListener('change', handleFileSelect, false);
			
		</script>



	</body>
</html>
