<html>
	<head>

		<style>
			table
			{
				border-collapse:collapse;
				font-family: "Courier New", monospace;
			}
			table,th, td
			{
				border: 1px solid black;
			}

			td
			{
				width: 100px;
				text-align: center;
			}

		</style>


		<script type="text/javascript">

			window.onerror=function(msg, url, linenumber){
				var Opcode = Read(PC);
				alert('Error message: '+msg+'\nURL: '+url+'\nLine Number: '+linenumber+'\nOp: '+Opcode+'\nPC: '+PC);
				return true
			}










			function pad(num, size) {
			    var s = num+"";
			    while (s.length < size) s = "0" + s;
			    return s;
			}






			function execute() {
				for (var i=0;i<1000;i++) {
					Operators[Read(PC)]();
				}
				debug();
			}



			function debug(){

				var Opcode = Read(PC);
				Operators[Opcode]();
				var Mnemonic = Mnemonic_map[Opcode];

				if (Opcode == 0xCB) {Mnemonic = Mnemonic_map_cb[Read(PC+1)]}

				var InsertIntoDebug = [
					pad(Opcode.toString(16).toUpperCase(), 2),
					Mnemonic, 
					PC, 
					SP, 
					A, 
					B, 
					C, 
					D, 
					E, 
					H, 
					L, 
					pad((F>>4).toString(2),4)
				];

				var table = document.getElementById("tab");
				var row = table.insertRow(1);


				for (var i=0;i<InsertIntoDebug.length;i++) {
					var cell = row.insertCell(i);
					cell.innerHTML = InsertIntoDebug[i];
				}

				if (table.rows.length > 20) {
					table.deleteRow(table.rows.length - 1)
				}
			}




		</script>



		<script type="application/javascript" src="gmb_mnemonic.js"></script>
		<script type="application/javascript" src="gmb_memory.js"></script>
		<script type="application/javascript" src="gmb_cpu.js"></script>
		<script type="application/javascript" src="gmb_opcode_functions.js"></script>
		<script type="application/javascript" src="gmb_opcodes.js"></script>
		<script type="application/javascript" src="gmb_cb_opcodes.js"></script>
	</head>
	<body>

		<canvas id="canvas" width="256" height="256"></canvas>

		<br><br>
		<input type="file" id="file" name="file"/><br>
		<output id="list"></output><br>

		<button type="button" onclick="debug()">Execute</button>
		<button type="button" onclick="run = setInterval(debug,1);">Run</button>
		<button type="button" onclick="run = setInterval(execute,1);">Run fast</button>
		<button type="button" onclick="clearInterval(run)">Stop</button>

		<table id = "tab">
			<thead>
				<tr>
					<td>Opcode</td><td>Mnemonic</td><td>PC</td><td>SP</td><td>A</td><td>B</td><td>C</td><td>D</td><td>E</td><td>H</td><td>L</td><td>F</td>
				</tr>
			</thead>
			<tbody>
			</tbody>
		</table>



		<script type = "application/javascript">

			var reader = new FileReader();

			reader.onload = function(evt) {
				var ROMStr = reader.result;
				//var ROMStr = ROMStr.replace(/[^a-zA-Z0-9]/g, "")
				//alert(ROMStr);

				ROM = [];


				for (var i = 0; i < ROMStr.length; i++) {
				    ROM[i] = ROMStr.charCodeAt(i) + '.';
				}

				alert('ROM Length: ' + ROM.length + '\nBanks:' + (ROM.length/16384));

				
			}

			function handleFileSelect(evt) {
				var file = evt.target.files[0];
				document.getElementById('list').innerHTML = 
				'<strong>' + escape(file.name) + '</strong> (' + (file.type || 'n/a') + ') - ' + file.size + ' bytes';

				reader.readAsBinaryString(file)

			}

			document.getElementById('file').addEventListener('change', handleFileSelect, false);
			
		</script>



	</body>
</html>
